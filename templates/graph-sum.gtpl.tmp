<!DOCTYPE html>
<html>
  <head>
    {{/*
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom"></script>
    */}}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
  </head>

  <body>
    <table>
      <tr>
        <td>
          <button type="button" onclick="location.href='top'">トップ</button>　
        </td>
        <td>
          <button type="button" onclick="location.href='currentevents'">
            開催中イベント一覧
          </button>
        </td>
        <td>
          <button type="button" onclick="location.href='scheduledevents'">
            開催予定イベント一覧
          </button>
        </td>
        <td>
          <button type="button" onclick="location.href='closedevents'">
            終了イベント一覧
          </button>
        </td>
      </tr>
      <tr>
        <td>
          <button
            type="button"
            onclick="location.href='top?eventid={{ .Eventid }}'"
          >
            イベントトップ
          </button>
        </td>
        <td>
          <button
            type="button"
            onclick="location.href='list-last?eventid={{ .Eventid }}'"
          >
            直近の獲得ポイント
          </button>
        </td>
        <td>
          <button
            type="button"
            onclick="location.href='graph-total?eventid={{ .Eventid }}&maxpoint={{ .Maxpoint }}&gscale={{ .Gscale }}'"
          >
            獲得ポイントグラフ
          </button>
        </td>
        <td></td>
      </tr>
    </table>
    <br />
    <h3>{{ .Title }}</h3>
    {{ .Eventname }}（{{ .Eventid }}:{{ .Ieventid }} )<br />
    {{ .Period }}<br />
    {{ .Roomname }}（{{ .Roomid }}）<br />
    <p>
      あくまで概算です。欠測がある場合などは正しく算出できません。<br />
      イベント最終日翌日のお昼までは最終データは仮のものです。これはたいていの場合実際のポイントよりかなり小さいです
    </p>
    <p>
      枚枠の具体的なポイントはバー（棒）の上にマウスカーソルをかざすと表示されます<br />
      このとき表示される日時は配信のおおむね開始日時になります（終了日時じゃありません！）
    </p>
    <div style="width: 80%">
      <canvas id="myChart" width="800" height="400"></canvas>
    </div>
    <script>
      Chart.register(ChartZoom);
      fetch('/graph-sum-data?eventid={{.Eventid}}&roomid={{.Roomid}}')
      .then(response => response.json())
      .then(data => {
      const ctx = document.getElementById('myChart').getContext('2d');
      const myChart = new Chart(ctx, {
        type: 'line',
        data: {
        labels: data.dtime,
        datasets: [{
          label: '累積ポイント',
          data: data.data1,
          borderColor: 'rgba(0, 0, 255, 1)',
          backgroundColor: 'rgba(0, 0, 255, 1)',
          barPercentage: 0.5,
          fill: false,
        },
        {
          type: "bar",
          label: '獲得ポイント',
          data: data.data2,
          borderColor: 'rgba(75, 192, 192, 1)',
          backgroundColor: 'rgba(100, 200, 0, 1)',
          barPercentage: 0.5,
          fill: false,
        }]
        },
        options: {
        responsive: true,
        interaction: {
          mode: 'nearest',
          intersect: false,
        },
        scales: {
          x: {
            type: 'time', // x軸を時間軸として設定
            time: {
              unit: 'day', // 時間の単位（日単位）
              displayFormats: {
                // day: 'yyyy-MM-dd' // 表示フォーマット
                day: 'MM-dd' // 表示フォーマット
              },
              tooltipFormat: 'yyyy-MM-dd HH-mm', // ツールチップのフォーマット
            },
          },
          y: {
            type: 'linear',
          }
        },
        plugins: {
          zoom: {
            zoom: {
              enabled: true, // 初期状態でzoomを有効にする
              mode: 'xy',
            },
            pan: {
              enabled: true, // 初期状態でpanを有効にする
              mode: 'xy',
            }
          }
        }

        tooltips: {
          callbacks: {
            // ホバー時のラベルをカスタマイズ
            title: function(tooltipItems, data) {
              // タイトルに日付を表示
              const date = moment(tooltipItems[0].xLabel);
              return date.format('yyyy-MM-dd HH:mm');
            },
            label: function(tooltipItem, data) {
              // ラベルに値を表示
              return '値: ' + tooltipItem.yLabel;
            },
          },
        },
        }
      });
      });
    </script>
  </body>
</html>
